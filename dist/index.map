{"version":3,"sources":["ECS/entity.js","ECS/component.js","ECS/system.js","ECS/utils.js","ECS/index.js","index.js"],"names":["Entity","constructor","id","components","setID","addComponent","component","unique","push","some","c","name","console","warn","removeComponents","componentName","predicate","filter","state","hasComponent","getComponents","map","Component","Name","Value","value","Level","level","exp","Equippable","slot","Attributes","health","Attacking","target","System","greet","entities","e","forEach","log","attack","filterMap","t","checkDead","EntityList","Array","fn","entity","shortid","generate","Manager","entityCount","systems","addEntity","reduce","removeEntity","getEntities","updateEntities","addSystem","system","runSystems","s","PORT","process","env","server","listen","socket","WebSocket","clients","on","ws","payload","man","ECS","find","i","dir","depth"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export class Entity {\n  constructor () {\n    this.id = null\n    this.components = []\n  }\n  setID (id = '') {\n    this.id = id\n\n    return this\n  }\n\n  addComponent (component) {\n    if (!component.unique)\n      this.components.push(component)\n    else if (!this.components.some(c => c.name === component.name))\n      this.components.push(component)\n    else\n      console.warn(`Attempting to add non-unique component \"${component.name}\" to \"${this.id}\" when that component already exists!`)\n\n    return this\n  }\n\n  removeComponents (componentName, predicate) {\n    this.components = this.components.filter(c => c.name !== componentName && !predicate(c.state))    \n\n    return this\n  }\n\n  hasComponent (componentName) {\n    return this.components.some(c => c.name === componentName)\n  }\n\n  getComponents (componentName) {\n    return this.components.filter(c => c.name === componentName)\n      .map(c => c.state)\n  }\n}\n","export const Component = {\n  /** Simple name component, this allows things to be identified in the game\n   *  world. Most things should have a name.\n   */\n  Name: (name = '') => ({\n    name: 'name',\n    unique: true,\n    state: name\n  }),\n  /** Entities have the Value component when they can be sold to a vendor or\n   *  traded between players. The component describes how much gold the entity\n   *  is worth, before taking into account any modifiers.\n   */\n  Value: (value = 0) => ({\n    name: 'value',\n    unique: true,\n    state: value\n  }),\n  /** The Level component is for entities such as players and enemies that can\n   *  earn experience, or otherwise have their functionality affected by their\n   *  level. \n   */\n  Level: (level = 1, exp = 0) => ({\n    name: 'level',\n    unique: true,\n    state: {\n      level,\n      exp\n    }\n  }),\n  /** \n   * \n   */\n  Equippable: (slot) => ({\n    name: 'equippable',\n    unique: true,\n    state: {\n      slot\n    }\n  }),\n  /**\n   * \n   */\n  Attributes: (health = 100) => ({\n    name: 'attributes',\n    unique: true,\n    state: {\n      health\n    }\n  }),\n  /**\n   * \n   */\n  Attacking: (target) => ({\n    name: 'attacking',\n    unique: false,\n    state: target\n  })\n}","export const System = {\n  greet: (entities) => {\n    entities.filter(e => e.hasComponent('name'))\n      .forEach(e => console.log(`Hello ${e.getComponents('name')[0]}!`))\n\n    return entities\n  },\n\n  attack: (entities) => {\n    // - For every entity that has an attacking component\n    // - apply some damage to the target entities health attribute\n    return entities.filterMap(e => e.hasComponent('attacking'), e => {\n      e.getComponents('attacking').forEach(target =>\n        entities.filterMap(t => t.id === target, t => {\n          t.getComponents('attributes')[0].health -= e.getComponents('level')[0].level\n\n          return t\n        })\n      )\n\n      return e\n    })\n  },\n\n  checkDead: (entities) => {\n    // CHeck health = 0\n    // Stop things attacking it\n    // Stop attacking things\n    return entities.filterMap(e => {\n      return e.hasComponent('attributes') && e.getComponents('attributes')[0].health <= 0\n    }, e => {\n      const id = e.id\n      entities.filterMap(\n        e => {\n          return e.hasComponent('attacking')\n        },\n        e => e.removeComponents('attacking', c => c === id)\n      )\n      return e\n    })\n  }\n}\n","import shortid from 'shortid'\n\nexport class EntityList extends Array {\n  filterMap (predicate, fn) {\n    return this.map(entity => predicate(entity) ? fn(entity) : entity)\n  }\n\n  push (entity) {\n    super.push(entity.setID(shortid.generate()))\n\n    return this\n  }\n}\n","import { Entity } from './entity'\nimport { Component } from './component'\nimport { System } from './system'\n\nimport { EntityList } from './utils'\n\nexport default {\n  Entity,\n  Component,\n  System,\n  Manager: class Manager {\n    constructor () {\n      this.entityCount = 0\n      this.entities = new EntityList()\n      this.systems = []\n\n      return this\n    }\n\n    addEntity (components = []) {\n      this.entities.push(components.reduce((e, c) => e.addComponent(c), new Entity()))\n\n      return this\n    }\n\n    removeEntity (id) {\n      this.entities = this.entities.filter(e => e.id !== id)\n\n      return this\n    }\n\n    getEntities () {\n      return this.entities\n    }\n\n    updateEntities (predicate, fn) {\n      this.entities = this.entities.filterMap(predicate, fn)\n\n      return this\n    }\n\n    addSystem (system) {\n      this.systems.push(system)\n      \n      return this\n    }\n\n    runSystems () {\n      this.entities = this.systems.reduce((e, s) => (e = s(e)), this.entities)\n\n      return this\n    }\n  }\n}\n","import express from 'express'\nimport lowdb from 'lowdb'\nimport { Server as WebSocket } from 'ws'\n\n// Constants -------------------------------------------------------------------\nconst PORT = process.env.PORT || 3000\n\n// Express Server --------------------------------------------------------------\nconst server = express()\n  .listen(PORT, () => {\n    \n  })\n\n// Web Socket ------------------------------------------------------------------\nconst socket = new WebSocket({ server })\nconst clients = {}\n\nsocket.on('connection', ws => {\n  ws.on('message', payload => {\n    console.log(payload)\n  })\n\n  ws.on('close', () => {\n\n  })\n})\n\nimport ECS from './ECS'\nconst man = new ECS.Manager()\nman\n  .addEntity([\n    ECS.Component.Name('andy'),\n    ECS.Component.Attributes(),\n    ECS.Component.Level(),\n  ])\n  .addEntity([\n    ECS.Component.Name('alex'),\n    ECS.Component.Attributes(150),\n    ECS.Component.Level(),\n    ECS.Component.Attacking(\n      man.getEntities()\n        .find(e => e.getComponents('name')[0] === 'andy')\n        .id\n    )\n  ])\n  .updateEntities(\n    e => e.hasComponent('name') && e.getComponents('name')[0] === 'andy',\n    e => e.addComponent(ECS.Component.Attacking(\n      man.getEntities()\n        .find(e => e.getComponents('name')[0] === 'alex')\n        .id\n    ))\n  )\n  .addSystem(ECS.System.attack)\n  .addSystem(ECS.System.checkDead)\n\nfor (let i = 0; i <= 200; i++) {\n  man.runSystems();\n}\n\nconsole.dir(man, { depth: null })\n"]}