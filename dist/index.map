{"version":3,"sources":["ECS/entity.js","ECS/component.js","ECS/system.js","ECS/utils.js","ECS/manager.js","ECS/index.js","index.js"],"names":["Entity","constructor","id","components","setID","addComponent","component","unique","push","some","c","name","console","warn","removeComponents","componentName","predicate","filter","state","hasComponent","getComponents","map","Component","Name","Value","value","Level","level","exp","Equippable","slot","Attributes","health","Attacking","target","System","greet","entities","e","forEach","log","attack","filterMap","t","checkDead","entity","EntityList","Array","fn","shortid","generate","Manager","entityCount","systems","addEntity","reduce","removeEntity","getEntities","updateEntities","addSystem","system","runSystems","s","PORT","process","env","server","listen","socket","WebSocket","clients","on","ws","payload","man","ECS","find","i","dir","depth"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export class Entity {\n  constructor() {\n    this.id = null;\n    this.components = [];\n  }\n  setID(id = \"\") {\n    this.id = id;\n\n    return this;\n  }\n\n  addComponent(component) {\n    if (!component.unique) this.components.push(component);\n    else if (!this.components.some(c => c.name === component.name))\n      this.components.push(component);\n    else\n      console.warn(\n        `Attempting to add non-unique component \"${component.name}\" to \"${\n          this.id\n        }\" when that component already exists!`\n      );\n\n    return this;\n  }\n\n  removeComponents(componentName, predicate) {\n    this.components = this.components.filter(\n      c => c.name !== componentName && !predicate(c.state)\n    );\n\n    return this;\n  }\n\n  hasComponent(componentName) {\n    return this.components.some(c => c.name === componentName);\n  }\n\n  getComponents(componentName) {\n    return this.components\n      .filter(c => c.name === componentName)\n      .map(c => c.state);\n  }\n}\n","export const Component = {\n  /** Simple name component, this allows things to be identified in the game\n   *  world. Most things should have a name.\n   */\n  Name: (name = \"\") => ({\n    name: \"name\",\n    unique: true,\n    state: name\n  }),\n  /** Entities have the Value component when they can be sold to a vendor or\n   *  traded between players. The component describes how much gold the entity\n   *  is worth, before taking into account any modifiers.\n   */\n  Value: (value = 0) => ({\n    name: \"value\",\n    unique: true,\n    state: value\n  }),\n  /** The Level component is for entities such as players and enemies that can\n   *  earn experience, or otherwise have their functionality affected by their\n   *  level.\n   */\n  Level: (level = 1, exp = 0) => ({\n    name: \"level\",\n    unique: true,\n    state: {\n      level,\n      exp\n    }\n  }),\n  /**\n   *\n   */\n  Equippable: slot => ({\n    name: \"equippable\",\n    unique: true,\n    state: {\n      slot\n    }\n  }),\n  /**\n   *\n   */\n  Attributes: (health = 100) => ({\n    name: \"attributes\",\n    unique: true,\n    state: {\n      health\n    }\n  }),\n  /**\n   *\n   */\n  Attacking: target => ({\n    name: \"attacking\",\n    unique: false,\n    state: target\n  })\n};\n","export const System = {\n  greet: entities => {\n    entities\n      .filter(e => e.hasComponent(\"name\"))\n      .forEach(e => console.log(`Hello ${e.getComponents(\"name\")[0]}!`));\n\n    return entities;\n  },\n\n  attack: entities => {\n    // - For every entity that has an attacking component\n    // - apply some damage to the target entities health attribute\n    return entities.filterMap(\n      e => e.hasComponent(\"attacking\"),\n      e => {\n        e.getComponents(\"attacking\").forEach(target =>\n          entities.filterMap(\n            t => t.id === target,\n            t => {\n              t.getComponents(\"attributes\")[0].health -= e.getComponents(\n                \"level\"\n              )[0].level;\n\n              return t;\n            }\n          )\n        );\n\n        return e;\n      }\n    );\n  },\n\n  checkDead: entities => {\n    return entities.filterMap(\n      e => {\n        // Check health = 0\n        return (\n          e.hasComponent(\"attributes\") &&\n          e.getComponents(\"attributes\")[0].health <= 0\n        );\n      },\n      entity => {\n        // Stop things attack this\n        entities.filterMap(\n          e => e.hasComponent(\"attacking\"),\n          e => e.removeComponents(\"attacking\", c => c === entity.id)\n        );\n        // Stop this attacking things\n        entity.removeComponents(\"attacking\", c => true);\n\n        return entity;\n      }\n    );\n  }\n};\n","import shortid from \"shortid\";\n\nexport class EntityList extends Array {\n  filterMap(predicate, fn) {\n    return this.map(entity => (predicate(entity) ? fn(entity) : entity));\n  }\n\n  push(entity) {\n    super.push(entity.setID(shortid.generate()));\n\n    return this;\n  }\n}\n","import { Entity } from \"./entity\";\nimport { EntityList } from \"./utils\";\n\nexport class Manager {\n  constructor() {\n    this.entityCount = 0;\n    this.entities = new EntityList();\n    this.systems = [];\n\n    return this;\n  }\n\n  addEntity(components = []) {\n    this.entities.push(\n      components.reduce((e, c) => e.addComponent(c), new Entity())\n    );\n\n    return this;\n  }\n\n  removeEntity(id) {\n    this.entities = this.entities.filter(e => e.id !== id);\n\n    return this;\n  }\n\n  getEntities() {\n    return this.entities;\n  }\n\n  updateEntities(predicate, fn) {\n    this.entities = this.entities.filterMap(predicate, fn);\n\n    return this;\n  }\n\n  addSystem(system) {\n    this.systems.push(system);\n\n    return this;\n  }\n\n  runSystems() {\n    this.entities = this.systems.reduce((e, s) => (e = s(e)), this.entities);\n\n    return this;\n  }\n}\n","import { Entity } from \"./entity\";\nimport { Component } from \"./component\";\nimport { System } from \"./system\";\nimport { Manager } from \"./manager\";\n\nimport { EntityList } from \"./utils\";\n\nexport default {\n  Entity,\n  Component,\n  System,\n  Manager\n};\n","import express from \"express\";\nimport lowdb from \"lowdb\";\nimport { Server as WebSocket } from \"ws\";\n\n// Constants -------------------------------------------------------------------\nconst PORT = process.env.PORT || 3000;\n\n// Express Server --------------------------------------------------------------\nconst server = express().listen(PORT, () => {});\n\n// Web Socket ------------------------------------------------------------------\nconst socket = new WebSocket({ server });\nconst clients = {};\n\nsocket.on(\"connection\", ws => {\n  ws.on(\"message\", payload => {\n    console.log(payload);\n  });\n\n  ws.on(\"close\", () => {});\n});\n\nimport ECS from \"./ECS\";\nconst man = new ECS.Manager();\nman\n  .addEntity([\n    ECS.Component.Name(\"andy\"),\n    ECS.Component.Attributes(),\n    ECS.Component.Level()\n  ])\n  .addEntity([\n    ECS.Component.Name(\"alex\"),\n    ECS.Component.Attributes(150),\n    ECS.Component.Level(),\n    ECS.Component.Attacking(\n      man.getEntities().find(e => e.getComponents(\"name\")[0] === \"andy\").id\n    )\n  ])\n  .updateEntities(\n    e => e.hasComponent(\"name\") && e.getComponents(\"name\")[0] === \"andy\",\n    e =>\n      e.addComponent(\n        ECS.Component.Attacking(\n          man.getEntities().find(e => e.getComponents(\"name\")[0] === \"alex\").id\n        )\n      )\n  )\n  .addSystem(ECS.System.attack)\n  .addSystem(ECS.System.checkDead);\n\nfor (let i = 0; i <= 200; i++) {\n  man.runSystems();\n}\n\nconsole.dir(man, { depth: null });\n"]}